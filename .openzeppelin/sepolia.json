{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xc2147115dE66887eA226F5a0b5a617EF62b1fe73",
      "txHash": "0xe614fbea03a0bfc7110bfe35cf0d15299477baff85e8e442251e4f7cd0759a62",
      "kind": "uups"
    }
  ],
  "impls": {
    "e8b7a2f635549c73643402fbf00807b0bf780cb283211bcb1af2f07448d3b7d0": {
      "address": "0x252b4AE2eA4993C72574AC24E9725F656eC50B42",
      "txHash": "0x7edd0419edefeb5eabe4c39f26d688df044e9603976d2e210f06c9ef1d609562",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "rewardToken",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(DevX)5380",
            "contract": "NFTStaking",
            "src": "contracts/NFTStaking.sol:23"
          },
          {
            "label": "nftToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(ERC721Mock)5428",
            "contract": "NFTStaking",
            "src": "contracts/NFTStaking.sol:24"
          },
          {
            "label": "rewardPerBlock",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "NFTStaking",
            "src": "contracts/NFTStaking.sol:26"
          },
          {
            "label": "unbondingPeriod",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "NFTStaking",
            "src": "contracts/NFTStaking.sol:27"
          },
          {
            "label": "rewardClaimDelay",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "NFTStaking",
            "src": "contracts/NFTStaking.sol:28"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(StakeInfo)5467_storage))",
            "contract": "NFTStaking",
            "src": "contracts/NFTStaking.sol:36"
          },
          {
            "label": "userStakedTokens",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "NFTStaking",
            "src": "contracts/NFTStaking.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)280_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)364_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(DevX)5380": {
            "label": "contract DevX",
            "numberOfBytes": "20"
          },
          "t_contract(ERC721Mock)5428": {
            "label": "contract ERC721Mock",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(StakeInfo)5467_storage))": {
            "label": "mapping(address => mapping(uint256 => struct NFTStaking.StakeInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeInfo)5467_storage)": {
            "label": "mapping(uint256 => struct NFTStaking.StakeInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(StakeInfo)5467_storage": {
            "label": "struct NFTStaking.StakeInfo",
            "members": [
              {
                "label": "stakedAtBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unbondingStartBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
